services:
  db:
    image: postgres:17.4

    restart: always

    env_file: 
      - path: ./database/.env
        required: true

    volumes: 
      - postgresql_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

    ports:
      - 5432:5432

    networks:
      - app_networks

  backend: 
    build:
      context: ./backend/
      dockerfile: Dockerfile

    restart: always

    env_file: 
      - path: ./backend/.env
        required: true

    develop:
      watch:
        - path: ./backend/package.json
          action: rebuild

        - path: ./backend/
          target: /app
          action: sync

    ports:
      - 3000:3000

    depends_on:
      db:
        condition: service_healthy

    networks:
      - app_networks

  frontend: 
    build:
      context: ./frontend/
      dockerfile: Dockerfile

    restart: always

    env_file: 
      - path: ./frontend/.env
        required: true

    develop:
      watch:
        - path: ./frontend/package.json
          action: rebuild

        - path: ./frontend/
          target: /app
          action: sync

    ports:
      - 5173:5173

    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started

    networks:
      - app_networks


volumes:
  postgresql_data:

networks:
  app_networks:
